{"version":3,"sources":["webpack:///./src/mixins/WidgetMixin.js","webpack:///./src/components/Widgets/TflStatus.vue?fc04","webpack:///./src/components/Widgets/TflStatus.vue?5b68","webpack:///src/components/Widgets/TflStatus.vue","webpack:///./src/components/Widgets/TflStatus.vue?1656","webpack:///./src/components/Widgets/TflStatus.vue"],"names":["WidgetMixin","props","options","type","Object","default","data","progress","Progress","color","overrideProxyChoice","overrideUpdateInterval","disableLoader","updater","defaultTimeout","mounted","this","fetchData","updateInterval","continuousUpdates","beforeDestroy","clearInterval","computed","proxyReqEndpoint","baseUrl","process","VUE_APP_DOMAIN","window","location","origin","serviceEndpoints","corsProxy","useProxy","usersInterval","methods","update","startLoading","setInterval","error","msg","stackTrace","ErrorHandler","$emit","start","finishLoading","setTimeout","end","tooltip","content","html","trigger","delay","makeRequest","endpoint","protocol","body","method","url","JSON","stringify","CustomHeaders","headers","timeout","requestConfig","Promise","resolve","reject","axios","request","then","response","success","message","catch","dataFetchError","finally","render","_vm","_h","$createElement","_c","_self","staticClass","_l","line","key","index","_v","_s","class","getStatusColor","statusCode","status","_f","disruption","_e","showAll","filterLines","length","$t","on","toggleAllLines","staticRenderFns","mixins","lineStatuses","filters","format","description","processData","results","code","filterByLineName","allLines","usersLines","sortByStatusCode","lines","component"],"mappings":"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","file":"js/chunk-2ee06ca8.e0b0f2ea.js","sourcesContent":["/**\n * Mixin that all pre-built and custom widgets extend from.\n * Manages loading state, error handling, data updates and user options\n */\nimport axios from 'axios';\nimport { Progress } from 'rsup-progress';\nimport ErrorHandler from '@/utils/ErrorHandler';\nimport { serviceEndpoints } from '@/utils/defaults';\n\nconst WidgetMixin = {\n  props: {\n    options: {\n      type: Object,\n      default: {},\n    },\n  },\n  data: () => ({\n    progress: new Progress({ color: 'var(--progress-bar)' }),\n    overrideProxyChoice: false,\n    overrideUpdateInterval: null,\n    disableLoader: false, // Prevent ever showing the loader\n    updater: null, // Stores interval\n    defaultTimeout: 50000,\n  }),\n  /* When component mounted, fetch initial data */\n  mounted() {\n    this.fetchData();\n    if (this.updateInterval) {\n      this.continuousUpdates();\n      this.disableLoader = true;\n    }\n  },\n  beforeDestroy() {\n    if (this.updater) {\n      clearInterval(this.updater);\n    }\n  },\n  computed: {\n    proxyReqEndpoint() {\n      const baseUrl = process.env.VUE_APP_DOMAIN || window.location.origin;\n      return `${baseUrl}${serviceEndpoints.corsProxy}`;\n    },\n    useProxy() {\n      return this.options.useProxy || this.overrideProxyChoice;\n    },\n    /* Returns either a number in ms to continuously update widget data. Or 0 for no updates */\n    updateInterval() {\n      const usersInterval = this.options.updateInterval;\n      if (usersInterval === null && this.overrideUpdateInterval) {\n        return this.overrideUpdateInterval * 1000;\n      }\n      if (!usersInterval) return 0;\n      // If set to `true`, then default to 30 seconds\n      if (typeof usersInterval === 'boolean') return 30 * 1000;\n      // If set to a number, and within valid range, return user choice\n      if (typeof usersInterval === 'number'\n        && usersInterval >= 2\n        && usersInterval <= 7200) {\n        return usersInterval * 1000;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    /* Re-fetches external data, called by parent. Usually overridden by widget */\n    update() {\n      this.startLoading();\n      this.fetchData();\n    },\n    /* If continuous updates enabled, create interval */\n    continuousUpdates() {\n      this.updater = setInterval(() => { this.update(); }, this.updateInterval);\n    },\n    /* Called when an error occurs. Logs to handler, and passes to parent component */\n    error(msg, stackTrace) {\n      ErrorHandler(msg, stackTrace);\n      this.$emit('error', msg);\n    },\n    /* When a data request update starts, show loader */\n    startLoading() {\n      if (!this.disableLoader) {\n        this.$emit('loading', true);\n        this.progress.start();\n      }\n    },\n    /* When a data request finishes, hide loader */\n    finishLoading() {\n      this.$emit('loading', false);\n      setTimeout(() => { this.progress.end(); }, 500);\n    },\n    /* Overridden by child component. Will make network request, then end loader */\n    fetchData() {\n      this.finishLoading();\n    },\n    /* Used as v-tooltip, pass text content in, and will show on hover */\n    tooltip(content, html = false) {\n      return {\n        content, html, trigger: 'hover focus', delay: 250,\n      };\n    },\n    /* Makes data request, returns promise */\n    makeRequest(endpoint, options, protocol, body) {\n      // Request Options\n      const method = protocol || 'GET';\n      const url = this.useProxy ? this.proxyReqEndpoint : endpoint;\n      const data = JSON.stringify(body || {});\n      const CustomHeaders = options || null;\n      const headers = this.useProxy\n        ? { 'Target-URL': endpoint, CustomHeaders: JSON.stringify(CustomHeaders) } : CustomHeaders;\n      const timeout = this.options.timeout || this.defaultTimeout;\n      const requestConfig = {\n        method, url, headers, data, timeout,\n      };\n      // Make request\n      return new Promise((resolve, reject) => {\n        axios.request(requestConfig)\n          .then((response) => {\n            if (response.data.success === false) {\n              this.error('Proxy returned error from target server', response.data.message);\n            }\n            resolve(response.data);\n          })\n          .catch((dataFetchError) => {\n            this.error('Unable to fetch data', dataFetchError);\n            reject(dataFetchError);\n          })\n          .finally(() => {\n            this.finishLoading();\n          });\n      });\n    },\n  },\n};\n\nexport default WidgetMixin;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TflStatus.vue?vue&type=style&index=0&id=06c1769f&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tfl-status\"},[(_vm.lineStatuses)?[_vm._l((_vm.filterLines),function(line){return _c('div',{key:line.index,staticClass:\"line-row\"},[_c('p',{staticClass:\"row name\"},[_vm._v(_vm._s(line.line))]),_c('p',{class:(\"row status \" + (_vm.getStatusColor(line.statusCode)))},[_vm._v(_vm._s(line.status))]),(line.disruption)?_c('p',{staticClass:\"row disruption\"},[_vm._v(_vm._s(_vm._f(\"format\")(line.disruption)))]):_vm._e()])}),(!_vm.showAll)?_c('div',{staticClass:\"line-row\"},[_c('p',{staticClass:\"row all-other\"},[_vm._v(\" \"+_vm._s(_vm.filterLines.length > 0 ? _vm.$t('widgets.tfl-status.good-service-rest') : _vm.$t('widgets.tfl-status.good-service-all'))+\" \")])]):_vm._e(),_c('p',{staticClass:\"more-details-btn\",on:{\"click\":_vm.toggleAllLines}},[_vm._v(\" \"+_vm._s(_vm.showAll ? _vm.$t('widgets.general.show-less') : _vm.$t('widgets.general.show-more'))+\" \")])]:_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"tfl-status\">\n  <template v-if=\"lineStatuses\">\n    <div v-for=\"line in filterLines\" :key=\"line.index\" class=\"line-row\">\n      <p class=\"row name\">{{ line.line }}</p>\n      <p :class=\"`row status ${getStatusColor(line.statusCode)}`\">{{ line.status }}</p>\n      <p class=\"row disruption\" v-if=\"line.disruption\">{{ line.disruption | format }}</p>\n    </div>\n    <div v-if=\"!showAll\" class=\"line-row\">\n      <p class=\"row all-other\">\n        {{\n          filterLines.length > 0 ?\n          $t('widgets.tfl-status.good-service-rest') :\n          $t('widgets.tfl-status.good-service-all')\n        }}\n      </p>\n    </div>\n    <p class=\"more-details-btn\" @click=\"toggleAllLines\">\n      {{ showAll ? $t('widgets.general.show-less') : $t('widgets.general.show-more') }}\n    </p>\n  </template>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\n\nexport default {\n  mixins: [WidgetMixin],\n  data() {\n    return {\n      lineStatuses: null,\n      showAll: false,\n    };\n  },\n  computed: {\n    /* Return only the lines without a good service, unless showing all */\n    filterLines() {\n      if (this.showAll) { return this.lineStatuses; }\n      return this.lineStatuses.filter((line) => line.statusCode !== 10);\n    },\n  },\n  filters: {\n    format(description) {\n      const parts = description.split(':');\n      return parts.length > 1 ? parts[1] : parts[0];\n    },\n  },\n  methods: {\n    /* Makes GET request to the TFL API */\n    fetchData() {\n      axios.get(widgetApiEndpoints.tflStatus)\n        .then((response) => {\n          this.lineStatuses = this.processData(response.data);\n        })\n        .catch(() => {\n          this.error('Unable to fetch data from TFL API');\n        })\n        .finally(() => {\n          this.finishLoading();\n        });\n    },\n    /* Processes the results to be rendered by the UI */\n    processData(data) {\n      let results = [];\n      data.forEach((line, index) => {\n        results.push({\n          index,\n          line: line.name,\n          statusCode: line.lineStatuses[0].statusSeverity,\n          status: line.lineStatuses[0].statusSeverityDescription,\n          disruption: line.lineStatuses[0].reason,\n        });\n      });\n      if (!this.options.sortAlphabetically) {\n        results = this.sortByStatusCode(results);\n      }\n      if (this.options.linesToShow && Array.isArray(this.options.linesToShow)) {\n        results = this.filterByLineName(results, this.options.linesToShow);\n      }\n      return results;\n    },\n    /* Get color, depending on the status code */\n    getStatusColor(code) {\n      if (code === 20) return 'dark'; // Strike action\n      if (code === 0) return 'info'; // Special service or upcoming planned works\n      if (code <= 6) return 'red'; // Closed, part-closed or severe delays\n      if (code <= 9) return 'orange'; // Minor delays, planned bus replacement\n      return 'green'; // Good Service - Everything is awesome!\n    },\n    /* If user only wants to see results from certain lines, filter the rest out */\n    filterByLineName(allLines, usersLines) {\n      const chosenLines = usersLines.map(name => name.toLowerCase());\n      const filtered = allLines.filter((line) => chosenLines.includes(line.line.toLowerCase()));\n      if (filtered.length < 1) {\n        this.error('No TFL lines match your filter');\n        return allLines;\n      }\n      return filtered;\n    },\n    /* Sort results in order of most-delayed first */\n    sortByStatusCode(lines) {\n      return lines.reverse().sort((a, b) => (a.statusCode > b.statusCode ? 1 : -1));\n    },\n    /* Toggle show/ hide all lines */\n    toggleAllLines() {\n      this.showAll = !this.showAll;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n\n.tfl-status {\n  .line-row {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    padding: 0.5rem 0.25rem;\n    .row {\n      margin: 0.2rem 0;\n    }\n    .status {\n      font-weight: bold;\n      text-align: right;\n      &.green { color: var(--success); }\n      &.orange { color: var(--warning); }\n      &.red { color: var(--danger); }\n      &.info { color: var(--info); }\n      &.dark { color: #fa360f; }\n    }\n    .disruption {\n      opacity: var(--dimming-factor);\n      font-size: 0.85rem;\n      grid-column-start: span 2;\n    }\n    .all-other {\n      grid-column-start: span 2;\n      font-weight: bold;\n      text-align: center;\n      color: var(--success)\n    }\n    &:not(:last-child) {\n      border-bottom: 1px dashed var(--widget-text-color);\n    }\n  }\n  p {\n    color: var(--widget-text-color);\n    cursor: default;\n    margin: 0;\n  }\n  // Show more details button\n  .more-details-btn {\n    cursor: pointer;\n    text-align: center;\n    margin: 0.5rem 0.25rem 0.25rem;\n    padding: 0.1rem 0.25rem;\n    border: 1px solid transparent;\n    border-radius: var(--curve-factor);\n    &:hover {\n      border: 1px solid var(--widget-text-color);\n    }\n    &:focus, &:active {\n      background: var(--widget-text-color);\n      color: var(--widget-background-color);\n    }\n  }\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TflStatus.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TflStatus.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TflStatus.vue?vue&type=template&id=06c1769f&scoped=true&\"\nimport script from \"./TflStatus.vue?vue&type=script&lang=js&\"\nexport * from \"./TflStatus.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TflStatus.vue?vue&type=style&index=0&id=06c1769f&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06c1769f\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}