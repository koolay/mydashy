{"version":3,"sources":["webpack:///./src/mixins/WidgetMixin.js","webpack:///./src/components/Widgets/Jokes.vue?cac7","webpack:///./src/components/Widgets/Jokes.vue?a8d8","webpack:///src/components/Widgets/Jokes.vue","webpack:///./src/components/Widgets/Jokes.vue?2fe4","webpack:///./src/components/Widgets/Jokes.vue"],"names":["WidgetMixin","props","options","type","Object","default","data","progress","Progress","color","overrideProxyChoice","overrideUpdateInterval","disableLoader","updater","defaultTimeout","mounted","this","fetchData","updateInterval","continuousUpdates","beforeDestroy","clearInterval","computed","proxyReqEndpoint","baseUrl","process","VUE_APP_DOMAIN","window","location","origin","serviceEndpoints","corsProxy","useProxy","usersInterval","methods","update","startLoading","setInterval","error","msg","stackTrace","ErrorHandler","$emit","start","finishLoading","setTimeout","end","tooltip","content","html","trigger","delay","makeRequest","endpoint","protocol","body","method","url","JSON","stringify","CustomHeaders","headers","timeout","requestConfig","Promise","resolve","reject","axios","request","then","response","success","message","catch","dataFetchError","finally","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","jokeLine1","jokeLine2","_e","staticRenderFns","mixins","components","jokeType","language","safeMode","category","processData","component"],"mappings":"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","file":"js/chunk-897867a6.29da1571.js","sourcesContent":["/**\n * Mixin that all pre-built and custom widgets extend from.\n * Manages loading state, error handling, data updates and user options\n */\nimport axios from 'axios';\nimport { Progress } from 'rsup-progress';\nimport ErrorHandler from '@/utils/ErrorHandler';\nimport { serviceEndpoints } from '@/utils/defaults';\n\nconst WidgetMixin = {\n  props: {\n    options: {\n      type: Object,\n      default: {},\n    },\n  },\n  data: () => ({\n    progress: new Progress({ color: 'var(--progress-bar)' }),\n    overrideProxyChoice: false,\n    overrideUpdateInterval: null,\n    disableLoader: false, // Prevent ever showing the loader\n    updater: null, // Stores interval\n    defaultTimeout: 50000,\n  }),\n  /* When component mounted, fetch initial data */\n  mounted() {\n    this.fetchData();\n    if (this.updateInterval) {\n      this.continuousUpdates();\n      this.disableLoader = true;\n    }\n  },\n  beforeDestroy() {\n    if (this.updater) {\n      clearInterval(this.updater);\n    }\n  },\n  computed: {\n    proxyReqEndpoint() {\n      const baseUrl = process.env.VUE_APP_DOMAIN || window.location.origin;\n      return `${baseUrl}${serviceEndpoints.corsProxy}`;\n    },\n    useProxy() {\n      return this.options.useProxy || this.overrideProxyChoice;\n    },\n    /* Returns either a number in ms to continuously update widget data. Or 0 for no updates */\n    updateInterval() {\n      const usersInterval = this.options.updateInterval;\n      if (usersInterval === null && this.overrideUpdateInterval) {\n        return this.overrideUpdateInterval * 1000;\n      }\n      if (!usersInterval) return 0;\n      // If set to `true`, then default to 30 seconds\n      if (typeof usersInterval === 'boolean') return 30 * 1000;\n      // If set to a number, and within valid range, return user choice\n      if (typeof usersInterval === 'number'\n        && usersInterval >= 2\n        && usersInterval <= 7200) {\n        return usersInterval * 1000;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    /* Re-fetches external data, called by parent. Usually overridden by widget */\n    update() {\n      this.startLoading();\n      this.fetchData();\n    },\n    /* If continuous updates enabled, create interval */\n    continuousUpdates() {\n      this.updater = setInterval(() => { this.update(); }, this.updateInterval);\n    },\n    /* Called when an error occurs. Logs to handler, and passes to parent component */\n    error(msg, stackTrace) {\n      ErrorHandler(msg, stackTrace);\n      this.$emit('error', msg);\n    },\n    /* When a data request update starts, show loader */\n    startLoading() {\n      if (!this.disableLoader) {\n        this.$emit('loading', true);\n        this.progress.start();\n      }\n    },\n    /* When a data request finishes, hide loader */\n    finishLoading() {\n      this.$emit('loading', false);\n      setTimeout(() => { this.progress.end(); }, 500);\n    },\n    /* Overridden by child component. Will make network request, then end loader */\n    fetchData() {\n      this.finishLoading();\n    },\n    /* Used as v-tooltip, pass text content in, and will show on hover */\n    tooltip(content, html = false) {\n      return {\n        content, html, trigger: 'hover focus', delay: 250,\n      };\n    },\n    /* Makes data request, returns promise */\n    makeRequest(endpoint, options, protocol, body) {\n      // Request Options\n      const method = protocol || 'GET';\n      const url = this.useProxy ? this.proxyReqEndpoint : endpoint;\n      const data = JSON.stringify(body || {});\n      const CustomHeaders = options || null;\n      const headers = this.useProxy\n        ? { 'Target-URL': endpoint, CustomHeaders: JSON.stringify(CustomHeaders) } : CustomHeaders;\n      const timeout = this.options.timeout || this.defaultTimeout;\n      const requestConfig = {\n        method, url, headers, data, timeout,\n      };\n      // Make request\n      return new Promise((resolve, reject) => {\n        axios.request(requestConfig)\n          .then((response) => {\n            if (response.data.success === false) {\n              this.error('Proxy returned error from target server', response.data.message);\n            }\n            resolve(response.data);\n          })\n          .catch((dataFetchError) => {\n            this.error('Unable to fetch data', dataFetchError);\n            reject(dataFetchError);\n          })\n          .finally(() => {\n            this.finishLoading();\n          });\n      });\n    },\n  },\n};\n\nexport default WidgetMixin;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Jokes.vue?vue&type=style&index=0&id=585a7a9e&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.jokeType)?_c('div',{staticClass:\"joke-wrapper\"},[_c('p',{staticClass:\"joke joke-line-1\"},[_vm._v(_vm._s(_vm.jokeLine1))]),(_vm.jokeLine2)?_c('p',{staticClass:\"joke joke-line-2\"},[_vm._v(_vm._s(_vm.jokeLine2))]):_vm._e()]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div v-if=\"jokeType\" class=\"joke-wrapper\">\n  <p class=\"joke joke-line-1\">{{ jokeLine1 }}</p>\n  <p class=\"joke joke-line-2\" v-if=\"jokeLine2\">{{ jokeLine2 }}</p>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\n\nexport default {\n  mixins: [WidgetMixin],\n  components: {},\n  data() {\n    return {\n      jokeType: null,\n      jokeLine1: null,\n      jokeLine2: null,\n    };\n  },\n  computed: {\n    /* Language code to fetch jokes for */\n    language() {\n      const supportedLanguages = ['en', 'cs', 'de', 'es', 'fr', 'pt'];\n      const usersChoice = this.options.language;\n      if (usersChoice && supportedLanguages.includes(usersChoice)) return usersChoice;\n      const localLanguage = this.$store.getters.appConfig.lang;\n      if (localLanguage && supportedLanguages.includes(localLanguage)) return localLanguage;\n      return 'en';\n    },\n    /* Should enable safe mode, to disallow NSFW jokes */\n    safeMode() {\n      return !!this.options.safeMode;\n    },\n    /* Format the users preferred category  */\n    category() {\n      let usersChoice = this.options.category;\n      if (!usersChoice) return 'any';\n      if (Array.isArray(usersChoice)) usersChoice = usersChoice.join();\n      const categories = ['any', 'misc', 'programming', 'dark', 'pun', 'spooky', 'christmas'];\n      if (categories.some((cat) => usersChoice.toLowerCase().includes(cat))) return usersChoice;\n      return 'any';\n    },\n    /* Combine data parameters for the API endpoint */\n    endpoint() {\n      return `${widgetApiEndpoints.jokes}${this.category}`\n      + `?lang=${this.language}${this.safeMode ? '&safe-mode' : ''}`;\n    },\n  },\n  methods: {\n    /* Make GET request to Jokes API endpoint */\n    fetchData() {\n      axios.get(this.endpoint)\n        .then((response) => {\n          if (response.data.error) {\n            this.error('No matching jokes returned', response.data.additionalInfo);\n          }\n          this.processData(response.data);\n        })\n        .catch((dataFetchError) => {\n          this.error('Unable to fetch any jokes', dataFetchError);\n        })\n        .finally(() => {\n          this.finishLoading();\n        });\n    },\n    /* Assign data variables to the returned data */\n    processData(data) {\n      this.jokeType = data.type;\n      if (this.jokeType === 'twopart') {\n        this.jokeLine1 = data.setup;\n        this.jokeLine2 = data.delivery;\n      } else if (this.jokeType === 'single') {\n        this.jokeLine1 = data.joke;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.joke-wrapper {\n  p.joke {\n    color: var(--widget-text-color);\n    font-size: 1.2rem;\n  }\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Jokes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Jokes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Jokes.vue?vue&type=template&id=585a7a9e&scoped=true&\"\nimport script from \"./Jokes.vue?vue&type=script&lang=js&\"\nexport * from \"./Jokes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Jokes.vue?vue&type=style&index=0&id=585a7a9e&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"585a7a9e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}