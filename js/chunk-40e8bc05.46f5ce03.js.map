{"version":3,"sources":["webpack:///./src/mixins/WidgetMixin.js","webpack:///./src/components/Widgets/HealthChecks.vue?d5d4","webpack:///./src/components/Widgets/HealthChecks.vue?4896","webpack:///src/components/Widgets/HealthChecks.vue","webpack:///./src/components/Widgets/HealthChecks.vue?7a3e","webpack:///./src/components/Widgets/HealthChecks.vue","webpack:///./src/components/Widgets/HealthChecks.vue?32fd"],"names":["WidgetMixin","props","options","type","Object","default","data","progress","Progress","color","overrideProxyChoice","overrideUpdateInterval","disableLoader","updater","defaultTimeout","mounted","this","fetchData","updateInterval","continuousUpdates","beforeDestroy","clearInterval","computed","proxyReqEndpoint","baseUrl","process","VUE_APP_DOMAIN","window","location","origin","serviceEndpoints","corsProxy","useProxy","usersInterval","methods","update","startLoading","setInterval","error","msg","stackTrace","ErrorHandler","$emit","start","finishLoading","setTimeout","end","tooltip","content","html","trigger","delay","makeRequest","endpoint","protocol","body","method","url","JSON","stringify","CustomHeaders","headers","timeout","requestConfig","Promise","resolve","reject","axios","request","then","response","success","message","catch","dataFetchError","finally","render","_vm","_h","$createElement","_c","_self","staticClass","_l","cron","directives","name","rawName","value","pingTimeTooltip","expression","key","id","class","status","_v","_s","_f","desc","_e","staticRenderFns","mixins","components","crons","filters","formatStatus","formatDate","timestamp","apiKey","processData","results","pingCount","lastPing","nextPing","makeUrl","cronId","timestampToDateTime","classes","component"],"mappings":"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","file":"js/chunk-40e8bc05.46f5ce03.js","sourcesContent":["/**\n * Mixin that all pre-built and custom widgets extend from.\n * Manages loading state, error handling, data updates and user options\n */\nimport axios from 'axios';\nimport { Progress } from 'rsup-progress';\nimport ErrorHandler from '@/utils/ErrorHandler';\nimport { serviceEndpoints } from '@/utils/defaults';\n\nconst WidgetMixin = {\n  props: {\n    options: {\n      type: Object,\n      default: {},\n    },\n  },\n  data: () => ({\n    progress: new Progress({ color: 'var(--progress-bar)' }),\n    overrideProxyChoice: false,\n    overrideUpdateInterval: null,\n    disableLoader: false, // Prevent ever showing the loader\n    updater: null, // Stores interval\n    defaultTimeout: 50000,\n  }),\n  /* When component mounted, fetch initial data */\n  mounted() {\n    this.fetchData();\n    if (this.updateInterval) {\n      this.continuousUpdates();\n      this.disableLoader = true;\n    }\n  },\n  beforeDestroy() {\n    if (this.updater) {\n      clearInterval(this.updater);\n    }\n  },\n  computed: {\n    proxyReqEndpoint() {\n      const baseUrl = process.env.VUE_APP_DOMAIN || window.location.origin;\n      return `${baseUrl}${serviceEndpoints.corsProxy}`;\n    },\n    useProxy() {\n      return this.options.useProxy || this.overrideProxyChoice;\n    },\n    /* Returns either a number in ms to continuously update widget data. Or 0 for no updates */\n    updateInterval() {\n      const usersInterval = this.options.updateInterval;\n      if (usersInterval === null && this.overrideUpdateInterval) {\n        return this.overrideUpdateInterval * 1000;\n      }\n      if (!usersInterval) return 0;\n      // If set to `true`, then default to 30 seconds\n      if (typeof usersInterval === 'boolean') return 30 * 1000;\n      // If set to a number, and within valid range, return user choice\n      if (typeof usersInterval === 'number'\n        && usersInterval >= 2\n        && usersInterval <= 7200) {\n        return usersInterval * 1000;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    /* Re-fetches external data, called by parent. Usually overridden by widget */\n    update() {\n      this.startLoading();\n      this.fetchData();\n    },\n    /* If continuous updates enabled, create interval */\n    continuousUpdates() {\n      this.updater = setInterval(() => { this.update(); }, this.updateInterval);\n    },\n    /* Called when an error occurs. Logs to handler, and passes to parent component */\n    error(msg, stackTrace) {\n      ErrorHandler(msg, stackTrace);\n      this.$emit('error', msg);\n    },\n    /* When a data request update starts, show loader */\n    startLoading() {\n      if (!this.disableLoader) {\n        this.$emit('loading', true);\n        this.progress.start();\n      }\n    },\n    /* When a data request finishes, hide loader */\n    finishLoading() {\n      this.$emit('loading', false);\n      setTimeout(() => { this.progress.end(); }, 500);\n    },\n    /* Overridden by child component. Will make network request, then end loader */\n    fetchData() {\n      this.finishLoading();\n    },\n    /* Used as v-tooltip, pass text content in, and will show on hover */\n    tooltip(content, html = false) {\n      return {\n        content, html, trigger: 'hover focus', delay: 250,\n      };\n    },\n    /* Makes data request, returns promise */\n    makeRequest(endpoint, options, protocol, body) {\n      // Request Options\n      const method = protocol || 'GET';\n      const url = this.useProxy ? this.proxyReqEndpoint : endpoint;\n      const data = JSON.stringify(body || {});\n      const CustomHeaders = options || null;\n      const headers = this.useProxy\n        ? { 'Target-URL': endpoint, CustomHeaders: JSON.stringify(CustomHeaders) } : CustomHeaders;\n      const timeout = this.options.timeout || this.defaultTimeout;\n      const requestConfig = {\n        method, url, headers, data, timeout,\n      };\n      // Make request\n      return new Promise((resolve, reject) => {\n        axios.request(requestConfig)\n          .then((response) => {\n            if (response.data.success === false) {\n              this.error('Proxy returned error from target server', response.data.message);\n            }\n            resolve(response.data);\n          })\n          .catch((dataFetchError) => {\n            this.error('Unable to fetch data', dataFetchError);\n            reject(dataFetchError);\n          })\n          .finally(() => {\n            this.finishLoading();\n          });\n      });\n    },\n  },\n};\n\nexport default WidgetMixin;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=style&index=0&id=8b95013e&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.crons)?_c('div',{staticClass:\"health-checks-wrapper\"},_vm._l((_vm.crons),function(cron){return _c('div',{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.pingTimeTooltip(cron)),expression:\"pingTimeTooltip(cron)\"}],key:cron.id,staticClass:\"cron-row\"},[_c('div',{staticClass:\"status\"},[_c('p',{class:cron.status},[_vm._v(_vm._s(_vm._f(\"formatStatus\")(cron.status)))])]),_c('div',{staticClass:\"info\"},[_c('p',{staticClass:\"cron-name\"},[_vm._v(_vm._s(cron.name))]),_c('p',{staticClass:\"cron-desc\"},[_vm._v(_vm._s(cron.desc))])])])}),0):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"health-checks-wrapper\" v-if=\"crons\">\n  <div\n    class=\"cron-row\"\n    v-for=\"cron in crons\" :key=\"cron.id\"\n    v-tooltip=\"pingTimeTooltip(cron)\"\n  >\n    <div class=\"status\">\n      <p :class=\"cron.status\">{{ cron.status | formatStatus }}</p>\n    </div>\n    <div class=\"info\">\n      <p class=\"cron-name\">{{ cron.name }}</p>\n      <p class=\"cron-desc\">{{ cron.desc }}</p>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\nimport { capitalize, timestampToDateTime } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin],\n  components: {},\n  data() {\n    return {\n      crons: null,\n    };\n  },\n  filters: {\n    formatStatus(status) {\n      let symbol = '';\n      if (status === 'up') symbol = '✔';\n      if (status === 'down') symbol = '✘';\n      if (status === 'new') symbol = '❖';\n      return `${symbol} ${capitalize(status)}`;\n    },\n    formatDate(timestamp) {\n      return timestampToDateTime(timestamp);\n    },\n  },\n  computed: {\n    /* API endpoint, either for self-hosted or managed instance */\n    endpoint() {\n      if (this.options.host) return `${this.options.host}/api/v1/checks`;\n      return `${widgetApiEndpoints.healthChecks}`;\n    },\n    apiKey() {\n      if (!this.options.apiKey) {\n        this.error('An API key is required, please see the docs for more info');\n      }\n      return this.options.apiKey;\n    },\n  },\n  methods: {\n    /* Make GET request to CoinGecko API endpoint */\n    fetchData() {\n      this.overrideProxyChoice = true;\n      const authHeaders = { 'X-Api-Key': this.apiKey };\n      this.makeRequest(this.endpoint, authHeaders).then(\n        (response) => { this.processData(response); },\n      );\n    },\n    /* Assign data variables to the returned data */\n    processData(data) {\n      const results = [];\n      data.checks.forEach((cron) => {\n        results.push({\n          id: cron.slug,\n          name: cron.name,\n          desc: cron.desc,\n          status: cron.status,\n          pingCount: cron.n_pings,\n          lastPing: cron.last_ping,\n          nextPing: cron.next_ping,\n          url: this.makeUrl(cron.unique_key),\n        });\n      });\n      this.crons = results;\n    },\n    makeUrl(cronId) {\n      const base = this.options.host || 'https://healthchecks.io';\n      return `${base}/checks/${cronId}/details`;\n    },\n    pingTimeTooltip(cron) {\n      const { lastPing, nextPing, pingCount } = cron;\n      const content = `<b>Total number of Pings:</b> ${pingCount}<br>`\n        + `<b>Last Ping:</b> ${timestampToDateTime(lastPing)}<br>`\n        + `<b>Next Ping:</b>${timestampToDateTime(nextPing)}`;\n      return {\n        content, html: true, trigger: 'hover focus', delay: 250, classes: 'ping-times-tt',\n      };\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.health-checks-wrapper {\n  color: var(--widget-text-color);\n  .cron-row {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.25rem 0;\n    .status {\n      min-width: 5rem;\n      font-size: 1.2rem;\n      font-weight: bold;\n      p {\n        margin: 0;\n        color: var(--info);\n        &.up { color: var(--success); }\n        &.down { color: var(--danger); }\n        &.new { color: var(--neutral); }\n      }\n    }\n    .info {\n      p.cron-name {\n        margin: 0.25rem 0;\n        font-weight: bold;\n        color: var(--widget-text-color);\n      }\n      p.cron-desc {\n        margin: 0;\n        color: var(--widget-text-color);\n        opacity: var(--dimming-factor);\n      }\n    }\n    &:not(:last-child) {\n      border-bottom: 1px dashed var(--widget-text-color);\n    }\n  }\n}\n\n</style>\n\n<style lang=\"scss\">\n.ping-times-tt {\n  min-width: 20rem;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HealthChecks.vue?vue&type=template&id=8b95013e&scoped=true&\"\nimport script from \"./HealthChecks.vue?vue&type=script&lang=js&\"\nexport * from \"./HealthChecks.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HealthChecks.vue?vue&type=style&index=0&id=8b95013e&scoped=true&lang=scss&\"\nimport style1 from \"./HealthChecks.vue?vue&type=style&index=1&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8b95013e\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HealthChecks.vue?vue&type=style&index=1&lang=scss&\""],"sourceRoot":""}