{"version":3,"sources":["webpack:///./src/components/Widgets/EthGasPrices.vue?10d8","webpack:///./src/components/Widgets/EthGasPrices.vue?2dc3","webpack:///src/components/Widgets/EthGasPrices.vue","webpack:///./src/components/Widgets/EthGasPrices.vue?9e19","webpack:///./src/components/Widgets/EthGasPrices.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_l","gasCost","key","name","_s","usd","gwei","gasInfo","ethPrice","time","value","class","selectedTimeFrame","on","$event","updateTimeFrame","label","attrs","chartId","lastUpdated","source","directives","rawName","tooltip","standard","expression","_e","staticRenderFns","mixins","computed","numHours","endpoint","data","gasCosts","timeOptions","methods","fetchData","processPriceInfo","sources","processHistoryData","labels","datasets","type","values","title","height","colors","truncateLegends","lineOptions","hideDots","axisOptions","xIsSeries","xAxisMode","tooltipOptions","formatTooltipY","newNumHours","mounted","component"],"mappings":"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","file":"js/chunk-970bec2e.22dc126f.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthGasPrices.vue?vue&type=style&index=0&id=a3bd12f0&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.gasCosts)?_c('div',{staticClass:\"eth-gas-wrapper\"},[_c('p',{staticClass:\"current-label\"},[_vm._v(\"Current Gas Prices\")]),_vm._l((_vm.gasCosts),function(gasCost){return _c('div',{key:gasCost.name,staticClass:\"gas-row\"},[_c('p',{staticClass:\"time-name\"},[_vm._v(_vm._s(gasCost.name))]),_c('div',{staticClass:\"cost\"},[_c('span',{staticClass:\"usd\"},[_vm._v(\"$\"+_vm._s(gasCost.usd))]),_c('span',{staticClass:\"gwei\"},[_vm._v(_vm._s(gasCost.gwei)+\" GWEI\")])])])}),_c('div',{staticClass:\"current-price\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"Current ETH Price:\")]),_c('span',{staticClass:\"price\"},[_vm._v(_vm._s(_vm.gasInfo.ethPrice))])]),_c('p',{staticClass:\"time-frame-label\"},[_vm._v(\"Historical Gas Prices\")]),_c('div',{staticClass:\"time-frame-selector\"},_vm._l((_vm.timeOptions),function(time){return _c('span',{key:time.value,class:time.value === _vm.selectedTimeFrame ? 'selected' : '',on:{\"click\":function($event){return _vm.updateTimeFrame(time.value)}}},[_vm._v(\" \"+_vm._s(time.label)+\" \")])}),0),_c('div',{attrs:{\"id\":_vm.chartId}}),(_vm.gasInfo)?_c('div',{staticClass:\"gas-info\"},[_c('p',[_vm._v(\"Last Updated: \"+_vm._s(_vm.gasInfo.lastUpdated))]),_c('div',{staticClass:\"sources\"},[_vm._v(\" Sources: \"),_vm._l((_vm.gasInfo.sources),function(source){return _c('a',{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.tooltip((\"Average: \" + (source.standard || '[UNKNOWN]') + \" GWEI\"))),expression:\"tooltip(`Average: ${source.standard || '[UNKNOWN]'} GWEI`)\"}],key:source.name,attrs:{\"href\":source.source}},[_vm._v(_vm._s(source.name))])})],2)]):_vm._e()],2):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"eth-gas-wrapper\" v-if=\"gasCosts\">\n  <!-- Current Prices -->\n  <p class=\"current-label\">Current Gas Prices</p>\n  <div v-for=\"gasCost in gasCosts\" :key=\"gasCost.name\" class=\"gas-row\">\n    <p class=\"time-name\">{{ gasCost.name }}</p>\n    <div class=\"cost\">\n      <span class=\"usd\">${{ gasCost.usd }}</span>\n      <span class=\"gwei\">{{ gasCost.gwei }} GWEI</span>\n    </div>\n  </div>\n  <!-- Current ETH Price -->\n  <div class=\"current-price\">\n    <span class=\"label\">Current ETH Price:</span>\n    <span class=\"price\">{{ gasInfo.ethPrice }}</span>\n  </div>\n  <!-- Historical Chart -->\n  <p class=\"time-frame-label\">Historical Gas Prices</p>\n  <div class=\"time-frame-selector\">\n    <span\n      v-for=\"time in timeOptions\"\n      :key=\"time.value\"\n      @click=\"updateTimeFrame(time.value)\"\n      :class=\"time.value === selectedTimeFrame ? 'selected' : ''\"\n    >\n    {{ time.label }}\n    </span>\n  </div>\n  <div :id=\"chartId\"></div>\n  <!-- Meta Info -->\n  <div v-if=\"gasInfo\" class=\"gas-info\">\n    <p>Last Updated: {{ gasInfo.lastUpdated }}</p>\n    <div class=\"sources\">\n      Sources:\n      <a\n        v-for=\"source in gasInfo.sources\"\n        :key=\"source.name\"\n        :href=\"source.source\"\n        v-tooltip=\"tooltip(`Average: ${source.standard || '[UNKNOWN]'} GWEI`)\"\n      >{{ source.name }}</a>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport ChartingMixin from '@/mixins/ChartingMixin';\nimport { widgetApiEndpoints } from '@/utils/defaults';\nimport { timestampToTime, roundPrice, putCommasInBigNum } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin, ChartingMixin],\n  computed: {\n    numHours() {\n      return this.options.numHours || 24;\n    },\n    endpoint() {\n      const numHours = this.selectedTimeFrame || this.numHours;\n      return `${widgetApiEndpoints.ethGasHistory}?hours=${numHours}`;\n    },\n  },\n  data() {\n    return {\n      gasInfo: null,\n      gasCosts: null,\n      timeOptions: [\n        { label: '6 hours', value: 6 },\n        { label: '1 Day', value: 24 },\n        { label: '1 Week', value: 168 },\n        { label: '2 Weeks', value: 220 },\n      ],\n      selectedTimeFrame: null,\n    };\n  },\n  methods: {\n    /* Make GET request to CoinGecko API endpoint */\n    fetchData() {\n      this.makeRequest(widgetApiEndpoints.ethGasPrices).then(this.processPriceInfo);\n      this.makeRequest(this.endpoint).then(this.processHistoryData);\n    },\n    processPriceInfo(data) {\n      this.gasCosts = [\n        { name: 'Slow', gwei: data.slow.gwei, usd: data.slow.usd },\n        { name: 'Normal', gwei: data.normal.gwei, usd: data.normal.usd },\n        { name: 'Fast', gwei: data.fast.gwei, usd: data.fast.usd },\n        { name: 'Instant', gwei: data.instant.gwei, usd: data.instant.usd },\n      ];\n      const sources = [];\n      data.sources.forEach((sourceInfo) => {\n        const { name, source, standard } = sourceInfo;\n        sources.push({ name, source, standard });\n      });\n      this.gasInfo = {\n        lastUpdated: timestampToTime(data.lastUpdated),\n        ethPrice: `$${putCommasInBigNum(roundPrice(data.ethPrice))}`,\n        sources,\n      };\n    },\n    processHistoryData(data) {\n      const chartData = {\n        labels: data.labels,\n        datasets: [\n          { name: 'Slow', type: 'bar', values: data.slow },\n          { name: 'Normal', type: 'bar', values: data.normal },\n          { name: 'Fast', type: 'bar', values: data.fast },\n          { name: 'Instant', type: 'bar', values: data.instant },\n        ],\n      };\n      return new this.Chart(`#${this.chartId}`, {\n        title: 'Historical Transaction Costs',\n        data: chartData,\n        type: 'axis-mixed',\n        height: this.chartHeight,\n        colors: ['#ef476f', '#ffd166', '#118ab2', '#06d6a0'],\n        truncateLegends: true,\n        lineOptions: {\n          hideDots: 1,\n        },\n        axisOptions: {\n          xIsSeries: true,\n          xAxisMode: 'tick',\n        },\n        tooltipOptions: {\n          formatTooltipY: d => `${d} GWEI`,\n        },\n      });\n    },\n    updateTimeFrame(newNumHours) {\n      this.startLoading();\n      this.selectedTimeFrame = newNumHours;\n      this.fetchData();\n    },\n  },\n  mounted() {\n    this.selectedTimeFrame = this.numHours;\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.eth-gas-wrapper {\n  p.current-label {\n    margin: 0.25rem 0;\n    opacity: var(--dimming-factor);\n    color: var(--widget-text-color);\n  }\n  .gas-row {\n    display: flex;\n    vertical-align: middle;\n    justify-content: space-between;\n    color: var(--widget-text-color);\n    p.time-name {\n      margin: 0.25rem 0;\n      font-weight: bold;\n      font-size: 1.1rem;\n    }\n    .cost {\n      display: flex;\n      min-width: 10rem;\n      justify-content: space-between;\n      span {\n        font-family: var(--font-monospace);\n        margin: 0.5rem;\n        &.usd {\n          opacity: var(--dimming-factor);\n        }\n      }\n    }\n    &:not(:last-child) { border-bottom: 1px dashed var(--widget-text-color); }\n  }\n  .current-price {\n    color: var(--widget-text-color);\n    margin: 1rem 0 0.5rem;\n    span.label {\n      font-weight: bold;\n      margin-right: 0.5rem;\n    }\n    span.price {\n      font-family: var(--font-monospace);\n    }\n  }\n  .gas-info {\n    p, .sources {\n      margin: 0.5rem 0;\n      font-size: 0.8rem;\n      opacity: var(--dimming-factor);\n      color: var(--widget-text-color);\n      font-family: var(--font-monospace);\n    }\n    .sources a {\n      color: var(--widget-text-color);\n      margin: 0 0.15rem;\n    }\n  }\n  p.time-frame-label {\n    display: inline-block;\n    color: var(--widget-text-color);\n    opacity: var(--dimming-factor);\n    margin: 1rem 0.5rem 0.25rem 0;\n    font-size: 0.9rem;\n  }\n  .time-frame-selector {\n    display: inline-block;\n    margin: 0 0 0.25rem;\n    max-width: 20rem;\n    vertical-align: middle;\n    justify-content: space-evenly;\n    color: var(--widget-text-color);\n    font-size: 0.9rem;\n    span {\n      cursor: pointer;\n      padding: 0.1rem 0.25rem;\n      margin: 0 0.15rem;\n      border: 1px solid transparent;\n      border-radius: var(--curve-factor);\n      &.selected {\n        background: var(--widget-text-color);\n        color: var(--widget-background-color);\n      }\n      &:hover {\n        border: 1px solid var(--widget-text-color);\n      }\n    }\n  }\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthGasPrices.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthGasPrices.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EthGasPrices.vue?vue&type=template&id=a3bd12f0&scoped=true&\"\nimport script from \"./EthGasPrices.vue?vue&type=script&lang=js&\"\nexport * from \"./EthGasPrices.vue?vue&type=script&lang=js&\"\nimport style0 from \"./EthGasPrices.vue?vue&type=style&index=0&id=a3bd12f0&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a3bd12f0\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}