{"version":3,"sources":["webpack:///./src/components/Widgets/GlNetworkTraffic.vue?a1bd","webpack:///./src/components/Widgets/GlNetworkTraffic.vue?ff6a","webpack:///src/components/Widgets/GlNetworkTraffic.vue","webpack:///./src/components/Widgets/GlNetworkTraffic.vue?c2eb","webpack:///./src/components/Widgets/GlNetworkTraffic.vue","webpack:///./src/mixins/GlancesMixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","chartId","staticRenderFns","mixins","components","data","computed","limit","endpoint","methods","processData","trafficData","upload","download","Object","preliminary","timeLabels","uploadData","downloadData","name","type","values","labels","datasets","getRoundedTime","date","makeTitle","startDate","generateChart","timeChartData","chartTitle","title","height","colors","truncateLegends","lineOptions","regionFill","hideDots","axisOptions","xIsSeries","xAxisMode","tooltipOptions","formatTooltipY","created","component","hostname","options","error","apiVersion","credentials","username","password","stringifiedUser","Authorization","window","btoa","fetchData","makeRequest","then","makeGlancesUrl","apiPath"],"mappings":"kHAAA,W,gECAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmBC,MAAM,CAAC,GAAKP,EAAIQ,cAC3MC,EAAkB,G,wHCWP,GACfC,8BACAC,cACAC,KAHA,WAIA,UAEAC,UACAC,MADA,WAEA,gCAEAC,SAJA,WAKA,oEAGAC,SACAC,YADA,SACAC,GAAA,WACA,GACAC,UACAC,aAGAC,oCACA,WACA,yBACA,8BACAH,0BACA,6BACA,SACA,8BACAI,iBACA,aACA,kCACAA,0BAIA,SACA,KACA,KACA,2BACAD,2CACAE,0BACAC,uBAEAH,6CACAI,yBAEA,OACA,CAAAC,cAAAC,WAAAC,UACA,CAAAF,gBAAAC,WAAAC,WAEA,oBACA,oBAAAC,SAAAC,YAAA,IAEAC,eAxCA,SAwCAC,GACA,UACA,wDAEAC,UA5CA,SA4CAC,GACA,iFAEAC,cA/CA,SA+CAC,EAAAC,GACA,gDACAC,QACA1B,OACAe,kBACAY,wBACAC,6BACAC,mBACAC,aACAC,aACAC,YAEAC,aACAC,aACAC,kBAEAC,gBACAC,2BAAA,+BAMAC,QApFA,WAqFA,iCCjGyW,I,wBCQrWC,EAAY,eACd,EACApD,EACAU,GACA,EACA,KACA,WACA,MAIa,aAAA0C,E,6FClBA,QACbtC,SAAU,CAERuC,SAFQ,WAIN,OADKnD,KAAKoD,QAAQD,UAAUnD,KAAKqD,MAAM,4CAChCrD,KAAKoD,QAAQD,UAGtBG,WAPQ,WAQN,OAAOtD,KAAKoD,QAAQE,YAAc,GAGpCC,YAXQ,WAYN,GAAIvD,KAAKoD,QAAQI,UAAYxD,KAAKoD,QAAQK,SAAU,CAClD,IAAMC,EAAkB,GAAH,OAAM1D,KAAKoD,QAAQI,SAAnB,YAA+BxD,KAAKoD,QAAQK,UACjE,MAAO,CAAEE,cAAe,SAAF,OAAWC,OAAOC,KAAKH,KAE/C,OAAO,OAGX3C,QAAS,CAGP+C,UAHO,WAIL9D,KAAK+D,YAAY/D,KAAKc,SAAUd,KAAKuD,aAAaS,KAAKhE,KAAKgB,cAG9DiD,eAPO,SAOQC,GACb,MAAO,GAAP,OAAUlE,KAAKmD,SAAf,gBAA+BnD,KAAKsD,WAApC,YAAkDY","file":"js/chunk-b8d94e6a.b1021e9b.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlNetworkTraffic.vue?vue&type=style&index=0&id=0baa6091&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"glances-cpu-history-wrapper\"},[_c('div',{staticClass:\"gl-history-chart\",attrs:{\"id\":_vm.chartId}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"glances-cpu-history-wrapper\">\n  <div class=\"gl-history-chart\" :id=\"chartId\"></div>\n</div>\n</template>\n\n<script>\nimport WidgetMixin from '@/mixins/WidgetMixin';\nimport GlancesMixin from '@/mixins/GlancesMixin';\nimport ChartingMixin from '@/mixins/ChartingMixin';\nimport { convertBytes, getTimeAgo, timestampToTime } from '@/utils/MiscHelpers';\n\nexport default {\n  mixins: [WidgetMixin, GlancesMixin, ChartingMixin],\n  components: {},\n  data() {\n    return {};\n  },\n  computed: {\n    limit() {\n      return this.options.limit || 100;\n    },\n    endpoint() {\n      return this.makeGlancesUrl(`network/history/${this.limit}`);\n    },\n  },\n  methods: {\n    processData(trafficData) {\n      const preliminary = {\n        upload: [],\n        download: [],\n      };\n      /* eslint-disable prefer-destructuring */\n      Object.keys(trafficData).forEach((keyName) => {\n        let upOrDown = null;\n        if (keyName.includes('_tx')) upOrDown = 'up';\n        else if (keyName.includes('_rx')) upOrDown = 'down';\n        trafficData[keyName].forEach((dataPoint) => {\n          const dataTime = this.getRoundedTime(dataPoint[0]);\n          if (upOrDown === 'up') {\n            if (preliminary.upload[dataTime]) preliminary.upload[dataTime] += dataPoint[1];\n            else preliminary.upload[dataTime] = dataPoint[1];\n          } else if (upOrDown === 'down') {\n            if (preliminary.download[dataTime]) preliminary.download[dataTime] += dataPoint[1];\n            else preliminary.download[dataTime] = dataPoint[1];\n          }\n        });\n      });\n      const timeLabels = [];\n      const uploadData = [];\n      const downloadData = [];\n      const startDate = Object.keys(preliminary.upload)[0];\n      Object.keys(preliminary.upload).forEach((date) => {\n        timeLabels.push(timestampToTime(date));\n        uploadData.push(preliminary.upload[date]);\n      });\n      Object.keys(preliminary.download).forEach((date) => {\n        downloadData.push(preliminary.download[date]);\n      });\n      const datasets = [\n        { name: 'Upload', type: 'bar', values: uploadData },\n        { name: 'Download', type: 'bar', values: downloadData },\n      ];\n      const chartTitle = this.makeTitle(startDate);\n      this.generateChart({ labels: timeLabels, datasets }, chartTitle);\n    },\n    getRoundedTime(date) {\n      const roundTo = 1000 * 60;\n      return new Date(Math.round(new Date(date).getTime() / roundTo) * roundTo);\n    },\n    makeTitle(startDate) {\n      return `Network Activity over past ${getTimeAgo(startDate).replace('ago', '')}`;\n    },\n    generateChart(timeChartData, chartTitle) {\n      return new this.Chart(`#${this.chartId}`, {\n        title: chartTitle,\n        data: timeChartData,\n        type: 'axis-mixed',\n        height: this.chartHeight,\n        colors: ['#f6f000', '#04e4f4'],\n        truncateLegends: true,\n        lineOptions: {\n          regionFill: 1,\n          hideDots: 1,\n        },\n        axisOptions: {\n          xIsSeries: true,\n          xAxisMode: 'tick',\n        },\n        tooltipOptions: {\n          formatTooltipY: d => convertBytes(d),\n        },\n      });\n    },\n\n  },\n  created() {\n    this.overrideUpdateInterval = 10;\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.glances-cpu-history-wrapper {\n  .gl-history-chart {}\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlNetworkTraffic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GlNetworkTraffic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GlNetworkTraffic.vue?vue&type=template&id=0baa6091&scoped=true&\"\nimport script from \"./GlNetworkTraffic.vue?vue&type=script&lang=js&\"\nexport * from \"./GlNetworkTraffic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GlNetworkTraffic.vue?vue&type=style&index=0&id=0baa6091&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0baa6091\",\n  null\n  \n)\n\nexport default component.exports","/** Reusable mixin for all Glances widgets */\nexport default {\n  computed: {\n    /* Required, hostname (e.g. IP + port) for Glances instance */\n    hostname() {\n      if (!this.options.hostname) this.error('You must specify a \\'hostname\\' for Glaces');\n      return this.options.hostname;\n    },\n    /* Optionally specify the API version, defaults to V 3 */\n    apiVersion() {\n      return this.options.apiVersion || 3;\n    },\n    /* Optionally specify basic auth credentials for Glances instance */\n    credentials() {\n      if (this.options.username && this.options.password) {\n        const stringifiedUser = `${this.options.username}:${this.options.password}`;\n        return { Authorization: `Basic ${window.btoa(stringifiedUser)}` };\n      }\n      return null;\n    },\n  },\n  methods: {\n    /* Make the request to Glances API, and calls handler function with results\n    * Requires endpoint attribute and processData method to be implemented by child */\n    fetchData() {\n      this.makeRequest(this.endpoint, this.credentials).then(this.processData);\n    },\n    /* Returns URL to Glances API endpoint */\n    makeGlancesUrl(apiPath) {\n      return `${this.hostname}/api/${this.apiVersion}/${apiPath}`;\n    },\n  },\n};\n"],"sourceRoot":""}